<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sample - Superstore' inline='true' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_6356AA92628248B982A9D65436C1A006]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_6356AA92628248B982A9D65436C1A006]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_45B636F805B84D50BFEBAEF25F1E9AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_45B636F805B84D50BFEBAEF25F1E9AC3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%%%%' datatype='real' name='[Calculation_579557004219592710]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID (Returns)])/COUNT([Order ID])*100' />
      </column>
      <column caption='nuevo%' datatype='real' name='[Calculation_579557004223864839]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID (Returns)])/COUNT([Order ID])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_6356AA92628248B982A9D65436C1A006]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_45B636F805B84D50BFEBAEF25F1E9AC3]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_AEB6A00BE15342C2BDECD9AE2259BAB6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_AEB6A00BE15342C2BDECD9AE2259BAB6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcdf:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' ordering-field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[Order Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' ordering-field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[Order Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2011</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2011</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2014</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2013</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[__tableau_internal_object_id__].[cnt:Orders_AEB6A00BE15342C2BDECD9AE2259BAB6:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[diff:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[rank:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_AEB6A00BE15342C2BDECD9AE2259BAB6'>
            <properties context=''>
              <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_6356AA92628248B982A9D65436C1A006'>
            <properties context=''>
              <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_45B636F805B84D50BFEBAEF25F1E9AC3'>
            <properties context=''>
              <relation connection='excel-direct.1s3zkcn178f0gr155lq9s06cj8rb' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_AEB6A00BE15342C2BDECD9AE2259BAB6' />
            <second-end-point object-id='People_6356AA92628248B982A9D65436C1A006' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_AEB6A00BE15342C2BDECD9AE2259BAB6' />
            <second-end-point object-id='Returns_45B636F805B84D50BFEBAEF25F1E9AC3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='(optional): show the return rate(orders returned) by sub-category by region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column caption='nuevo%' datatype='real' name='[Calculation_579557004223864839]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID (Returns)])/COUNT([Order ID])' />
            </column>
            <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_579557004223864839]' derivation='User' name='[usr:Calculation_579557004223864839:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[usr:Calculation_579557004223864839:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[usr:Calculation_579557004223864839:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[usr:Calculation_579557004223864839:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[usr:Calculation_579557004223864839:qk]</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{DBB9BD74-D95C-454A-8EC8-359DC64AA289}' />
    </worksheet>
    <worksheet name='Quarterly profit over years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[qr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{D793A67C-3645-4468-A54D-46E2D39AB9FC}' />
    </worksheet>
    <worksheet name='Quarterly sales over years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[qr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{84D194CA-43F9-424B-9791-B701DB93CC4A}' />
    </worksheet>
    <worksheet name='Total discount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region (People)]' derivation='None' name='[none:Region (People):nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Discount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Discount:qk] + [federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk])</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]</cols>
      </table>
      <simple-id uuid='{9CCBD68E-9E3E-4386-870A-73EADA3B94D4}' />
    </worksheet>
    <worksheet name='Total profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9C8AD6EE-2943-4CD8-BB18-6FA2ABE7486A}' />
    </worksheet>
    <worksheet name='Total sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EE1CFE65-5AA5-46FF-B9ED-BD3FBA1B8E0B}' />
    </worksheet>
    <worksheet name='YoY growth rate profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcdf:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' ordering-field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' value='68' />
            <format attr='width' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]' value='68' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='165' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk] + [federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Profit:qk])</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{6C161E4C-51A9-4BE9-8CC7-AB6397636DBD}' />
    </worksheet>
    <worksheet name='YoY growth rate sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' ordering-field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</column>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='165' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Sales:qk] + [federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcdf:sum:Sales:qk])</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{74EF63B6-3ABE-4811-8E04-8615FF30E9EC}' />
    </worksheet>
    <worksheet name='profit margin(%) drilled down by sub-categor'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[pcto:sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='on' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{2645E8ED-724F-4405-BD63-73A6102CF802}' />
    </worksheet>
    <worksheet name='top 3 most profitable &quot;corporate&quot; customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Hawkins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Smayling&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adam Hart&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Haines&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Schoenberger&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alejandro Savely&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aleksandra Gannaway&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alex Russell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alice McCarthy&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Allen Rosenblatt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alyssa Crouse&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andrew Gjertsen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andy Gerbode&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andy Yotov&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ann Blume&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ann Chong&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anna Häberlin&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony Jacobs&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony Johnson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony O&apos;Donnell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony Rawles&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barbara Fisher&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Blumstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Französisch&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Pond&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Pistole&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Watters&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ben Peterman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Benjamin Venier&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Beth Fritzler&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Overfelt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Shonely&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Stewart&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Tyler&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brad Norvell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brenda Bowman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brendan Murry&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brendan Sweed&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brian Moss&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brooke Gillingham&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Candace McMahon&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cari Sayre&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carl Jackson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carol Adams&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cathy Prescott&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Charles Sheldon&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chris Selesnick&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Abelman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Phan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cindy Schnelling&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Claudia Bergmann&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Corey Catlett&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Molinari&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Yedwab&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cyma Kinney&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cynthia Voltz&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Damala Kotsonis&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dan Reichenbach&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dario Medina&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darren Budd&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darrin Van Huff&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dave Hallsten&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dave Poirier&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Bremer&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Kendrick&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Smith&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Wiener&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dean Katz&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Deirdre Greer&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denise Monton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denny Joy&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dionis Lloyd&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Jones&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Miller&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dorothy Badders&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dorothy Wardle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dorris liebe&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ed Braxton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Becker&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Hooks&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eleni McCrary&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Elizabeth Moffitt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ellis Ballard&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Elpida Rittenbach&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Bern&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Ashbrook&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Smith&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eudokia Martin&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Filia McAdams&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Atkinson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Hawley&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Chung&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Hopkins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Wasserman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Gene Hale&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;George Bell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;George Zrebassa&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Georgia Rosenberg&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Giulietta Dortch&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Grace Kelly&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Grant Thornton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Guthrie&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Maxwell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Guy Phonely&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harold Engle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harold Ryan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harry Marie&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Heather Kirkland&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Helen Wasserman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henry Goldwyn&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Hilary Holden&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jack O&apos;Briant&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jane Waco&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Janet Molinari&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jason Gross&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jason Klamczynski&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Braxton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Patt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jill Stevenson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Epp&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Mitchum&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Sink&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Grady&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jonathan Doherty&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Julie Creighton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Justin Deggeller&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Justin Ellison&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Justin Ritter&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kalyca Meade&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Bern&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Carlisle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Seio&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katharine Harms&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katherine Nockton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katrina Edelman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kean Nguyen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Keith Dawkins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kelly Lampkin&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Black&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Brennan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Dana&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Heidel&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kimberly Carter&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kristen Hastings&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Laura Armstrong&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Laurel Workman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lela Donovan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Linda Cazamias&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Linda Southworth&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lindsay Williams&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lisa Ryan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lori Olson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Luke Schmidt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maribeth Yedwab&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Marina Lichtenstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Cousins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Haberlin&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mary Zewe&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Collister&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Connell&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Hagelstein&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matthew Clasen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maureen Fritzler&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maya Herman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Dominguez&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Kennedy&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Paige&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Stewart&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michelle Ellison&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michelle Lonsdale&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Caudle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mitch Gastineau&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mitch Willingham&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Monica Federle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Muhammed MacIntyre&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Muhammed Yedwab&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nat Gilpin&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Neil Ducich&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nick Crebassa&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nicole Brennan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nicole Hansen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Noah Childs&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Noel Staavos&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nona Balk&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Odella Nelson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pamela Coakley&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Patrick Jones&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pauline Webber&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Phillip Breyer&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Quincy Jones&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rachel Payne&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Randy Ferguson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ricardo Sperren&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rick Reed&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rick Wilson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rob Williams&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Robert Barroso&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roland Schwarz&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roy Phan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ruben Ausman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sally Hughsby&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Saphhira Shifley&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scot Coram&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Cohen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sean Braxton&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shaun Chance&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sibella Parks&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stefania Perrino&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stefanie Holloman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stephanie Phelps&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steve Chapman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steven Ward&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stewart Carmichael&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stuart Van&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sung Pak&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Susan Gilcrest&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Suzanne McNair&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sylvia Foulston&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tamara Chand&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thea Hudgings&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Theresa Coyne&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Theresa Swint&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Boland&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Seio&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tiffany House&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tim Taslimi&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Todd Boyes&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Todd Sumrall&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tom Stivers&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Poddar&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Brennan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Pisteka&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Wilson&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Vivek Grady&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Yana Sorensen&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Yoseph Carroll&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Segment:nk]'>
            <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Corporate&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' included-values='in-range'>
            <min>2616.0</min>
            <max>8981.3238999999994</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Segment:nk]</column>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]</column>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]' />
              <text column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{C7AE4A11-FFAF-4948-AA38-81A49CF8EA88}' />
    </worksheet>
    <worksheet name='top 3 most profitable product sub categories in every region.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0dav60f06qpfp90zs0fva1xuqrb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0dav60f06qpfp90zs0fva1xuqrb1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[rank:sum:Profit:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[rank:sum:Profit:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk] / [federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk])</rows>
        <cols>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{BD490027-57B4-403D-B819-C99EB3583137}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42625' id='3' name='Total profit' w='19800' x='1700' y='1375' />
        <zone h='41875' id='8' name='Total sales' w='19800' x='25500' y='2375' />
        <zone h='42125' id='9' name='Total discount' w='20200' x='50700' y='2750' />
        <zone h='43500' id='10' name='YoY growth rate sales' w='22000' x='73800' y='3250' />
        <zone h='37000' id='11' name='Quarterly sales over years' w='43100' x='1600' y='49375' />
        <zone h='12250' id='12' name='Quarterly sales over years' pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' type-v2='color' w='14000' x='89400' y='43750' />
        <zone h='38000' id='13' name='Quarterly profit over years' w='45700' x='47000' y='48500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='42625' id='3' is-fixed='true' name='Total profit' w='19800' x='1700' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41875' id='8' is-fixed='true' name='Total sales' w='19800' x='25500' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42125' id='9' is-fixed='true' name='Total discount' w='20200' x='50700' y='2750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43500' id='10' is-fixed='true' name='YoY growth rate sales' w='22000' x='73800' y='3250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='13' is-fixed='true' name='Quarterly profit over years' w='45700' x='47000' y='48500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37000' id='11' is-fixed='true' name='Quarterly sales over years' w='43100' x='1600' y='49375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='12' name='Quarterly sales over years' pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' type-v2='color' w='14000' x='89400' y='43750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A53A8D58-D5AC-4243-AAA5-40D24D479533}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='49125' id='3' name='YoY growth rate profit' w='24400' x='2600' y='2000' />
        <zone h='7250' id='4' name='YoY growth rate profit' pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' type-v2='color' w='35900' x='31300' y='3625' />
        <zone h='52125' id='5' name='(optional): show the return rate(orders returned) by sub-category by region' w='90500' x='300' y='52625' />
        <zone h='12250' id='6' name='(optional): show the return rate(orders returned) by sub-category by region' pane-specification-id='2' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' type-v2='color' w='9300' x='90900' y='53375' />
        <zone h='38625' id='7' name='profit margin(%) drilled down by sub-categor' w='70700' x='28600' y='12875' />
        <zone h='9500' id='8' name='profit margin(%) drilled down by sub-categor' pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' type-v2='color' w='14000' x='82300' y='3125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49125' id='3' is-fixed='true' name='YoY growth rate profit' w='24400' x='2600' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='4' name='YoY growth rate profit' pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' type-v2='color' w='35900' x='31300' y='3625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38625' id='7' is-fixed='true' name='profit margin(%) drilled down by sub-categor' w='70700' x='28600' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='8' name='profit margin(%) drilled down by sub-categor' pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' type-v2='color' w='14000' x='82300' y='3125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52125' id='5' is-fixed='true' name='(optional): show the return rate(orders returned) by sub-category by region' w='90500' x='300' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='6' name='(optional): show the return rate(orders returned) by sub-category by region' pane-specification-id='2' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' type-v2='color' w='9300' x='90900' y='53375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{358ACA63-089F-4565-8F9A-CBDD601AEAFC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Quarterly profit over years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Quarterly sales over years'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total discount'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoY growth rate sales'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4DF81EFE-C889-48B1-ADC8-EEB2A6CF2FFD}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='(optional): show the return rate(orders returned) by sub-category by region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='YoY growth rate profit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='profit margin(%) drilled down by sub-categor'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F3C1162B-8D50-44C0-8AFD-6B872211ABA7}' />
    </window>
    <window class='worksheet' name='Total profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[__tableau_internal_object_id__].[cnt:Orders_AEB6A00BE15342C2BDECD9AE2259BAB6:ok]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E1DD535-0230-43BE-A77C-3E71555DBD5F}' />
    </window>
    <window class='worksheet' name='Total sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{185A9498-817D-45FB-8D34-544CE3954540}' />
    </window>
    <window class='worksheet' name='Total discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region (People):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51F8721F-FEAD-45C8-81B2-B32E1E79B550}' />
    </window>
    <window class='worksheet' name='YoY growth rate sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE69BEE1-6FDD-4015-9AF9-6406ED010E5B}' />
    </window>
    <window class='worksheet' maximized='true' name='YoY growth rate profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[:Measure Names]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7DC4D70-0956-463D-B4CF-B3D08934435F}' />
    </window>
    <window class='worksheet' name='Quarterly sales over years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69CCE7ED-86F1-4213-839E-BF46A93A6F29}' />
    </window>
    <window class='worksheet' name='Quarterly profit over years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4AAE83C-D9EB-492D-A7A3-20D107269A12}' />
    </window>
    <window class='worksheet' name='profit margin(%) drilled down by sub-categor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Product Name:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Segment:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{731A38E4-B5D4-465C-B6B2-D3884E151F86}' />
    </window>
    <window class='worksheet' name='top 3 most profitable &quot;corporate&quot; customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Customer Name:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Product Name:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Segment:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33821E8B-7AE5-4582-A487-02E85CA5A5BC}' />
    </window>
    <window class='worksheet' name='top 3 most profitable product sub categories in every region.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Product Name:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7ABC7C5-6635-442C-AE25-97E7FAFC0658}' />
    </window>
    <window class='worksheet' name='(optional): show the return rate(orders returned) by sub-category by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Order ID (Returns):nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Order ID:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Region:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Returned:nk]</field>
            <field>[federated.0dav60f06qpfp90zs0fva1xuqrb1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C584B07-FAEA-4854-9479-C25C92AFD416}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(optional): show the return rate(orders returned) by sub-category by region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Quarterly profit over years' width='192'>
      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
      rN//rv4/N/MJ4p7J/g4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Quarterly sales over years' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total discount' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARW0lEQVR4nO3daXhV9Z3A8e85d1+SXBKyyRbAhERkU9ABUVkUl8EFHMUqY7VWu8xM+4wz
      r+bFjC985nn6zIzVtrZ9pp3HsRVRqdAiSwUUQYEihH0PJCyGLfeS/e7nnHmBg4ItMdebc3Pz
      /33e5ZLk/8tJvpx7zk3O0SzLshBCQZqmaXquhxAilyQAoTQJQChtQASQTCZzPYLIUwMigNOn
      T+d6BJGnBkQAQmRKAlDAhY4EZl99csugIxwmbvTVAn3LmesB1JWmYdMfWbn5IKa3kNv/+hEm
      jRyErmV5GaOLnc0XmNByhrdXbCSa9jBx5v3cPrEKVy//+2tt2MTu9Bhm1A3+/EErzcmtKzlY
      egfzbxqCI7vT9znZA+SMwaf7D1N99xM8NW8qyxe9SiSa6vGjjm5ey8bDZ77yKi0Nu6hLniZ6
      +gDpkbP4/rcfZv/y33Io3NnriTub97HrZMflD+oeamfPpX3b7znf2fP8/Y3sAXJKw+lyEygs
      xetKk0rFObhpNSs27iM4fBIPPTCT1t3v8YePDqD5vUyY/iiViW5MS6OtcRuLln1Al1bIHfO/
      QVnXTtZtbqTzwmncI2awcMGtBHU41XiMeGgaQwHd6cYXKKI84KMr3sXe9e+xYssRSqv/ivlz
      p9L00VLe336SwNBxPLZgBpt/+3OaYkHa4jrzFz5O8LOpO88e4d3fv0tTu5uZDy1g6qhBVLos
      miIdVBaU5HKD9prsAXKqmzWv/4Ifv/JrimumE+hq4rW3/0ja5WbvRyv4eNce3l2/nwXf+Ufu
      H+PmWGuCjvAZwq1trFy1kcnzv82z88axdtlKwhda6HKP4nvPPU5q324isYsrhDvaiBWFANi3
      bjEvvvQKTcFhVEaP85ul69DdTravX8one3bw4bYYT/7wB9zo3MvynWeJRDqZOu9pFt7sZ8Xm
      w5emrn/vdT4+1onWfpg3f7+FhK4zyA+RSCIXG/FrkT1ATvm5be6dRP+0Cr28FJ1uvBV1PP6t
      JynSUqRSEZo+cuN16XSmjC98tywMNFwOHV1zoVkGluXBHwjicjtxaZ8fSPg93kuvk9TdPp9n
      54zF6XLTfWo7waHj+OYzT+G14pixExzQXDh0HZfLiWGYeBwOXC4npmGif+HgxHT4mXLnXB65
      ZQTxuInLskilwe3Jv/9P82/iAUPDX1RMSdkI5j3xGLEdqzmSrmBOXYBXf/Yyv1q8inAqxMSR
      bn71k5dZvb0Rp9OBryBEQbCAu2bewIeLf8nP39jM1LvvYlBhAUUFHsBJ0eAQzs++s5XllVTE
      zuPyFVESKsDn8+FyOii8ppbbRjj45U9f5NUla2l3jGBybYL//q8X+TA8jHsnlRGNnGLRz/+D
      N3eluW/qGJy+EIP8LsZPnUnHjmW89JNfsmFfM6aR4tOYxfCy4FW/4v5IGwi/DXr8+HGqqqpy
      PUbWmak4m1a+QX1TK7GExn3f+nuuL3P36nMkWo9yLp5ieGVdL1dvZ9F/vsT4J/6NcWVXf8/u
      T7fy6roITy28h4Az26ex+o6maZoE0I9ZlkUqGSeVNtEdLrweN1pvf74skw93n+eWiRW4eveB
      pBJJdJcHx9WeJxhRdqzdQOiWOYwscJA/P/5/IQDTNPPud2uam5sZMmRIrscQecbn82lfOgg2
      DIPW1tZczJOxZDKZdzOL/uFLAbhcLiorK3MxS8YSiUTezSz6BzkLJJQmAQilSQBCaQP2leBw
      exS7zvCWFPove6VU5I8BG8A/vLSKaCJty1qv/cuDhIJeW9YS2SVPgYTSJAChNAlAKE0CEEqT
      AITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlA
      KE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChtK98efR4PE5jYyN1
      dXVovb5XZ09MOsJhDG8RoaCHVLSd8y1teEOlFBf60cwE586cw3AGKC8ruXQT6HwSfecZrFib
      LWv5HnwFPdjDzX0F0IsATpw4wRNPPMHWrVtxOBxZHcLoPM3aD9YTGn4rs24qZc+mj4noPmKx
      I0ybcRvpxm1sP5PAmexkyPiZjB9RlFf3owUwww1Y0bBNi6XsWWcA6Ac3yLA4uL+B0dfXEeuA
      ZMsp2kuvY86EKpoP7KLl7CnOtju5a/Y0rK4W6o80YQyfSB7dkFz0YxkF8PzzzzN9+nTuuOOO
      r7m8RfTsIToCo6ku6eZoB6RTGoVBD5qm4fe4OZuM4fV50TUNzenEtFJYFqTSKUzTBC7e3Dse
      j1/xme2TSCSI97Al7bpdE0AikUS7YnuIPy+jAJqamhg7duzXXz3Vzeb1H9OY9nEo2UZbRwFl
      90+hsysBQCyRwucJ0h4JY1oWVjqNrrnQNHC6XJc+ja7reL2X36LIzh2Ex+P50vpXSmuabVF6
      PG70HuYRF32tp0DLly/nrbfeYtGiRRmuHmD2gqeZBbS1HORQo4+RVeVc+GADa9efIBpLM/XW
      WgZFz7Dmgw9xpbuovO42snsEIlT2lQPweDxUV1cDMGzYMIqKinC73QwdOjTz1TUNTdPQgMLi
      UYwL6GgODxNumcbZc234isspCXrRxt7E5NAZDHcBFWUhsn4SSijrKwdQVVXF4sWLAXjhhRcu
      PT5jxozsDOLyUfDZsxq3P8TwkaHP/9HhoXJ4VVbWEeKL8vCMuhDZIwEIpWUQQIzj+5uIApjd
      NB46gZxwE/mqlwHEOLZ3K0v/dylb9+5l764t/GHJR3T2zWxC9LlengbtZs+WeprOHcfctImg
      plM7ZyaD+mY2IfpcLwMYzLxnv8e4yScJ1QzFC+i6Uw4kRN7K4IUwkz3rXmfbCi8BHYrKbuBv
      n72XUM8fKPqJjU3HWHP0sC1rTRtexb1jrrNlrUxkFICv8Fq+9XcLGekBTdNlD5BnDMskZRj2
      rPXZ72v1VxkEYNEZ2cMr//4jyoM6RWUTeezpe2QPIPJSBgEU8MBzL3CvcbFsXXchv3Yl8lUG
      AXSy4c032Hb6AmYqjqt4Mt/9wQOyBxB5KYMAipjz1PeYA6RaD7BkTQRP1scSwh4ZBBDn8Cc7
      ONURxUqc43iDRhTwZX00IfpeBgFoePx+fMk0hnckDyyslhfCRN7K4Aymh4Anxq4/beLjzdu5
      EDfkNKjIWxn87Lbz8cqt3Pjwd/juo1PZseojWrM/lxC2yOh1ACwNI21g6Ab2/vWtENmVQQAh
      ps+dwpLVb7MLuOGeh+QYQOStDAJIEkuFeOSpZyjUumg83kkScGd9NCH6XkbHAFve3Uyn04XL
      2cWWdzfLMYDIWxm9EDZkWAdvv7aEUdpJWodOkVeBRd7KIAA3Ux54ktLGE7S0D2Pa9RPllWCR
      tzL6m+Cd72/APdjPJ2tW8/aqbSSzP5cQtshgD9BO4942DM8aPLfdR9EnRwgD12R9NCH6XgZ7
      gMHUXJ9k1cYkM2uCWGOGUZz9uYSwRS/3ACbJhMWEe75J3R0mOmkq7xwhxwAib/UygNOseWcv
      RvIE+09fACBUNonHvi1/ESbyUy8DqOD2u72cbS6n/DqLsopKioIFFPTNbEL0uV4EYGEkWln2
      Pz+lIeqh0GXSQYj5Cx+nWA4CRJ7qRQBp9rzzG1I3Pcm/3jYKlwaRhvf59bIN1PxwHoG+m1GI
      PtOLABKcPuXhutmFdFyIXHxoUCWD25ppBwlAZKxrwwbaf7fUlrUCt0wj9OiCS2/3IgANX1Gc
      ZT97Ge+lO1QkSadr5I4t4muxojGMlhZb1jI7L7+SbS8CCDDru//MrCwPJEQuyV8zCqVJAEJp
      ub9RtpnkyK5tnGozGF47nmsrQ3SHm9ixu5Hi0eOpqypFT7VTv7WehK+SGybV4ZODDpElOd8D
      tJ04RIe3gjGjKzmwbx/p2Hm272iisqaGloZ6Pg23c2DbdigbRZF5lp0Hm7HxntNigMv5HqCo
      ahw3AsnuFkLBTpKtF9CHXEv18GEUdLcRbj9HWCtk2ugRWN0BdhxpxmAIjisqsPNO7H9Oz+vb
      N59l9TCPzZuqp21j5zgWl8+T8wA0TSP86WGOnexk7KRJaJGj+LwXx3K7dBLJBE73xbvD6w4H
      aTONZUHaSF/6QkzTJJFIXPZ57dyoyUSCRA9b0s4+U8kkXLE9viht06XRAQzD+NL35krpdNqm
      acC8Yp6cB5CMNNDQ4mbC5En43Q7SfhetJyIkRpZzvrWVQOkIus810plIo3dEsDQfugYOl+vS
      59B1Ha/38mtU23mxFrfH86X1r5TWNNuidHvc6FeZx+m07yDK4XD0uG1STvt+DK+cJ8cBGDQf
      2MfOo50c3aeBfwgPPjCVYdpGlizahb+ymtnjKqggwuqlb2J6ipg64050uRSRyJIcB+Bg5K3z
      +P6tlz9aN+0u6qZ94YGqiXyjaqKtkwk15PwskBC5JAEIpUkAQmkSgFCaBCCUJgEIpUkAQmkS
      gFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEI
      pUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQml5EYCVbGXTmpWs27SHqH139xEK
      6P8BmAn2bNlOYe1kqgLt1O87iSl3iRRZ0u8DsFJx2tyDGDOkjOGj6nAkIxKAyJqc3ySvR6aJ
      w+lEAzRdx7QMu+/yKQawfh+A5nJjdbbSFkvhaDuHSUBukieypt8HgNPHhJoy3lv+NmlvCbfM
      mCkBiKzp/wGgUzh0LA8/NjbXg4gBqN8fBAvRl/JgD5CZ5xZMwzBNW9YKeF09vo/3rhew0gkb
      pgHNV3zVf7++vJKyQNCWWUr8gR7fx3vDJAYPHmzDNOAsvXwdzbKsvD+pcvz4caqqqnI9hsgz
      mqZp8hRIKE0CEEqTAITSBuxBsPjLLkSjRKLdtqwV8vkotemAOxMSgIJ2n23mj0cO2bLW9BEj
      ua/uelvWyoQ8BRJKkwCE0iQAoTQJQChNAhBKkwCE0uQ0qE2Se5ZAOmbLWq6x89E8/ffce38i
      AdgkueUVrGjYlrWc186WAL4ieQoklCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglGZ7
      AOl4O1vXLGPxktWcaO0G0uzduIK3lq3mZGsCC4uWY/W89cZi6o9GMEnR2HgKwzBJxdrZf+go
      hlweWmSJzQGkOLR5I1rNDB6+fxblBR7aDm7mbNEN3Du9ll319cQjjWw/bjD3bx6k+9gWmiNR
      zp+PYBoJGnbvRCuqlGuDiqyx93eBkq00x0PUOrs4eyHF4MEhzoR1xt5cRtCZZJDrPG3hOBWj
      hxBw+xgxbCjxeBekujiyZyftvuHcVBFA08D8wlXfLMvCMPr3rWMsGy/qbhom1lW2h2XjHrS/
      f2/sDcBIkkxGOdnUSKKzDcfQ8ZThxKVraJqG07JIGRpO58Udk1PTiVkmJLpoikQZXFuF87P/
      /U3T5P8vatffN7LdDNNEu1oANl4M0Ozn3xt7A/AWc03IT+WkmylJNLHuQIzSYIzDJ9oJlsSI
      GCbjih0cOtZCTUUJn54/Q0XJMNqCFdw1fRR7P6mnoTjEtWV+nM7PR9d1HbfbbeuX0ltJNNv2
      AS6XE/0q20N32PfM19HPvzf2HgNoPqprK9j13lKWfniUmuqhlI6dRPrA+yx7bysjrq0lUFpF
      lTvM7958i2hwNOUlfvx+L5ozyNiJdZxraiBtyEGwyA6b/x5Ao7Cimnsfqr7s0Rn3PXzZ2zVT
      ZlEz5fO3x4+vBcBZWMH0myv6fEqhDnkdQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJ
      QChNAhBKkwCE0iQAobQBe3Hcp3+0nFgiZctav/inuRQFPLasJbJrwAYQjSeJJtK2rGXnH5iI
      7JKnQEJpEoBQmgQglCYBCKX9Hzbgrd0L+5HOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total profit' width='123'>
      iVBORw0KGgoAAAANSUhEUgAAAHsAAADACAYAAAAkyhzJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAART0lEQVR4nO2cd3xUVaLHvzOTqckkmYRAQkggIB2klxCkWCgWAogFVgjCAxGw7K4FwX37
      8CmrrsqqrBD5oMRGcxV0HzxQigLSCc0EaQkBkhAy6ZmSafvHSMyQgCQGMvGc739zz50z5853
      zjn33nPnp/B4PB4kQqBs6AZIbh5StkBI2QIhZQuElC0QUrZASNkCIWVXwWKxNHQTbihStkBI
      2QIhZQuElC0QUrZASNkCIWULhJQtEFK2QEjZAiFlC4SULRBStkBI2QIhZQuElC0QUrZASNkC
      IWULhJQtEFK2QAQ0dAMaE4lzVzZ0E2rFugUP+7yWPVsgpGyBkLIFQs7ZdUChUDC0RysmDrsV
      k1HHhfxSlqzbz9EzeQ3Wptlj+/Lt/jMcz8q/6j5Sdh1I6BrDXb1bM2/pFnIKyohuYqSZKbDO
      9U29pwdrd/yEufjG/v1Iyq4lOk0A/TpG888v95FtLgXg/KUSzl8qaeCW/TpSdi0JDtRitTvJ
      KSirsbxH20imj+pFVFgQWXklLFy9i4ycIsJDDEy5uztut4f+nVqgVCpYueUYW1PPMiqhPaMS
      2gOwcvMx1u34ifF3dmHzgQxmjemD2+Nh/offcc+Atowe2IEgvYbicjvvrd3H7h/PX3fbpexa
      EmbUo1QqcLnc1cuC9fRoG8WcJd9SXG6nVWQo9w5ox/tfHwAgNEjH+t0nefvzPUSGB/Hw7V2w
      WE/y1c6ffIZxg1ZNoF7DpBHdWLn5GAdP5uLxeNh/PJsNu09RZq0gItTAuCGdOHwqF6vdeV1t
      l7JrSUGpFbfbg0qlrCa8dZSJe+PbkjiwfeU2c7EFo0ELwJnsQnYePeetp9hKYan1qp+jUwfw
      8cYjZOQUVm6LCA3k+QkDiQwLRKFQYC62sHprmpR9oygpt6PXBhAVFlRtnlYHKPnX9+l8+s3R
      au8LDzHU6nPMJRYuVpkqwoP13NEzjpeWf0e2uRSDVs3ssX1rVae8zq4ltgone9IvMGtMH5qH
      G1EoFLSICKZXuyjO5hbTq10UXVo3RaFQoFGr6NOhOUF6zTXrDNRraNUsxPueAFWN+6hUSix2
      B4VlVjRqFX07RtO0llcA/t2zy9NY9c4H7MgsxaWPIX7iDCb0aoL363CRv2s5Cz/bS75LT8zg
      6fzxoU54D/8Qy5bB1Kndf67IxtHlr3G471we6aT+zc3aefQcmgAVr864k2CDpvI6O9tcyupt
      afz5wXjCgvWUWSvYcjCDI6cvotVc/avedew8Tz3QH6New0cbD7Nx7+lq+1wqspBtLuWTF8fi
      cLrZuO8UxeW2WrVb4b9xlgVs+8dSCoZP576OJpS2TDYv+gzrg3NJjAVyN7DgAyvjZifSTm9m
      x9I3OdJrPjP76bhSdvmhZbyRlsCLEzpQc7/xYrFYMBiuPtzKhZAbRhandbdzX0cTakCla8Ww
      R3pwbn8GABk/7CN2dCLtglWgbsrAh4dRui+Var/18kOs3Ghi0kPXFi0Cfiw7jCY537Ax04YL
      wGWj1KnAkp2LDSguDKNN6yr6wjrSOcBMgU8d5Rz4dD2mBxOJE900fj1nx3LvYwNYsngOT+RZ
      cWmMtOrWGkdBHEXYsdv16HVV91eiyrtIHtAcYO9iHtsLun4zeaMG01dLRiotLb0Bx9IwXHks
      fiwbVM2HMOt/h/yy4dImFnzVlEi05GqtWG1ApXA3rqbNaHr5Zd/HSZ7all2LXmLN8S5M6OAr
      vKa52WKxYDQa6/9AGogrj8WPh/HqFBxJRdUqFoAQUwGnz7iqFKbzozOcMJ93BBL/6Hisq5Zz
      qPxmttQ/8WvZxdmZmG0uwEXJiS9YsqkZdyd4dcYN6EPW2nWcKHGBI48dKzdh7NMD3ZWVBHZn
      8rRmrP9wF6L79uthnOwt/OP1/eRZQd+0M6OfmkHXyzYjhzF96HIWzptJvktP2+GzebxfNdUA
      qJqPZHKbN1i0oSXPjGwu7Fm5H19n33zqcp1t0Kr5nylDaB8T7rM9r7CcOcnfYi7xvf8dHmLg
      7zPu9Ll9mjh3ZY317Dx6jtdX7EShUNAqMoRRCe1pEx3G/OXfXdfa95XX2f7dsxsBFruD5xZ/
      47OtQ2wTErrGUFBa/Q5XmFHPnvQLJH91wGe7XhtArrmMv36wtdrCRtsWYTw4tDMrNh9jSPeW
      dW6rX8/ZjRGFQkF8lxZsS82kpkEzJFBLQQ2rXUaDFqvdUeMK1olzZl7+6HtOXyioVlYbpOx6
      plVkKIFaNZkXi2ssNwXryc6vfi0fEqglr+jGnkLKYbweUSgUDOjSgm2Hz9b4cANAaJCW2WP6
      wHiocLjYcTSLtz/fg0GnZuKwW5k0vBtOl5ujZ/J478t99foDkLLrkaiwIJqEGDh1/urD7Zqt
      aazZmgZAkF7DmNs6ALDrx/OMnrcKAI1axR0945hyTw/eWr2LCofrqvXVBjmM1yMJt8awO+08
      torre3KkzFrB+j2n0Gt9+1yFw8V3h87idLkx/spaeG2QsuuJsGA9TUMDOXzq4lX3MWjVzEjs
      TdsW4SiVCvTaABIT2mO1O5k8sjt9O0YToFISoFJye684FAooKrfXWxvlMF5PDLq1Jcez8qv1
      aoNWzXMTEli5+RjHs/LZuPc0s8b0pk3zMNweD1sOepds1+8+ybR7e/L8hASUCgUHTuSweN1+
      XC43CV1jeG58QmWdl59EfX3Fzspn2q4HeVOlCvLhBcnvBilbIKRsgZCyBUKejdeCTyJebugm
      1BJ5giYsUrZASNkCIWULhJQtEFK2QEjZAiFlC4SULRBStkBI2QIhZQuElC0QUrZASNkCIWUL
      hJQtEFK2QEjZAiFlC4SULRBStkBI2QLh38+NO86x+f33+frHPKzoiYmfyIwJvWiigoaMoG6s
      +HXPPr5mCeldZvLqu8kkv/1X7g/cyLv/zvIW5m7i/a0mkl55j+S35zLEnELKnprzt8sPfcoX
      mocYL7Bo8GvZl8jKbM3AwVHoVIDaRMf77iIq3xthISOoa48fy46g94BSNv47E5sLcBSS/vUu
      Avt6M0hkBHXt8es5O2zILP6w6W2en3kSG6F0mfAEM7rqQEZQXxeNKILaRfaGxfyf8Q+89l4U
      Onch6d9+zOJND/LksEi0DRBB3dh+Bo0ogjqNTaltSRxYZc4eOYjA3ankIiOo64Ify46mlWEv
      Ww6ZvXO2y0bOjh840SSMUGQEdV3w42E8jCHTHmBt8ls8uzifCpWepp2HM21yP69QGUFda2Ra
      UhV+LS2pdGGXm9ia347xj8d8XvvxMC6pb6RsgZCyBULKFggpWyCkbIGQsgVCyhYIKVsgpGyB
      kLIFQsoWCClbIKRsgZCyBULKFggpWyCkbIGQsgVCyhYIKVsgpGyBkLIFQsoWCClbIKRsgZCy
      BULKFggpWyCkbIGQsgXCj/+M33hJSjnHl4dLfLalJMUwpltwA7XIi5R9A2geqib9v9sRHfrb
      Q/Yu/2jq44cih3GBkD37JvN5ajHz1uWSU+IkSKtk7oimTEsI4y9fX+SDHwpweSChtYGPJ8fw
      9Jrsyp6dBPRpqWftY60w6urWR6XsG0B2kYOOL53w2XZ5zu4WrWPbn9oQFRxAmd3NC+tyOZZt
      o8zu4twrHdAEKDhb4EAXoCAlKYbR9TiMS9k3gGvN2eUVbqZ+coGj2TZcbg9GnZIFoyI5W+Dg
      zncyGNo+iEn9QtFr6n+G9WPZh1j22GL2Xrm55f28PHcYEY0wgrrM7uadrWbevD+KXrF6lAqY
      vSobo07JVzNaciDLyu4MC5M/Os9royO57ZbAev18P5bdnanJyUytssV2aBlLzb2JAJ8I6nZ6
      MzuWvknKnvnMrCEL7XIE9YsNHEHtcnvQqRVEBQfgdHvYdcbCsRwbF4ocXChy0D1GT69YPU43
      FFp+SW/cdcbCqK5GHG7QqBQoFXX7fD+WfSUF7Nyu5Y6Z3sBKbwT1PG8ENd4I6p2fpWLrF++b
      cng5gvqZmxdBfa05+/Z2QfR9/RQVTg/j+4QSE6omQKVg4ZZ8vkkvw+WBsd2DmT7Qe5x9W+pZ
      tC2f8GfTGNw2iE8fjSFI+zs/QXMd/3/2xw7i+Z+N1RxBfZACfk4lBn6JoH7+pkZQpyTFkHKV
      snE9QxjXM6Ta9hVTYmvcPzpUzeanWtdLuxqJ7HL2billSOUXIiOor4dGFEFdhaxv+T50MM9U
      ytXKCOrroBFFUF/GxqFvsug9wnfOlRHUtcf/ZRfsZLv2Dob4WpQR1HXAz2W7SFu/h9hBnaqf
      SUcOY/rQQlLmzeSxpxawO3oaSdeMoP6eRRuycdW4hxjICOoqyAhqye+GxnE27mdYK9zMX5/H
      iv1FFFpcmAwqnr0rgpmDwnG5PSTvKODdrfnklDjRq5U8Gm9i/r3N0AZUv/WVX+Zk2LsZ/OXu
      Zj6LHfvPWpmx4gKnLtmJa6LhzbFR3N4+CIALRd776BeKHJX7vzA8gheGN61Wf1Wk7DpQbHPT
      KUrL/jm3EBEUwPlCB7NWZdMtWkePGD0GjZLNT7emeYiaYquLZ77IYc3BYh7pG+pTT6nNzZ//
      lcOcYb6SckucvLIxjyXjo+kZq+dknp3nvsyhZZiGNhEackuc3N3ZyJv3R9Wq3XIYrwORwQFM
      6mciIsjbV1qY1PSPM2CpcBOkVTIl3kSLUDVKBZgMKkZ0MlJiq35qaNQpSUmKQX1Fj88qqGBA
      awO9W3oXS9o30zKpv4mdZ7zXE/llTiJDat9PpezfSKHFxZLtZk5dsjOgte8qldXhZs3BYtYc
      LCbx1utfjw4PDGDz8TLScuyV9dgcHjLyKwBvz78lQlvrtsphvI5cnjcvljhJ6m/irfujKp8g
      KbW5GZ2cyb6zVkZ2NrJwXFStnkdrE6Fh1uBwxiRnklPixGRQ0bW5rrKOvDInT6zOJgnQq5WM
      6R7Mq6MjCdVfewFAXnpVoS6XXlaHm90ZVpK3m/nb6EjiwjWVZRUuDz9m21i4JZ/HB4UTH1dz
      3dfzUOFXR0pIy7UzZ1iEz/ZCi4t3tuZTXuHh9TGRPmXy0que0auVDG0XyEO9Q/k8tdinTKNS
      0CNGz+zB4aw+UHyVGn4dtwe2/FRG1+bVbxqZDCr+KyGM/DInZXb3NeuRsuvA3kwLaw4WU2rz
      frn5ZU6+SC0mKlhNeq6dT/cVcanMCXifTll7uITgWjwk6HR7OHLBhtXhxuX2sHRHARnmCgbd
      Ekipzc2fPs/hQJYVl9tDmd3NP78zE2NS/+o6t5yz60CEMYDF3xcwe1U2Vocbk0HFzEHhPNAz
      hDK7m9RzVuauy6XQ4kKvVjK+dwgvj/IOsV8eLmHtoWJSkmKqXS8n4R3KU5Ji+PpoCe9sNVPh
      8tA7Vs8HE1tUnhNMjjfx1JpsDp23oVLAhD6hLEiMvFpzK5FzdhXk7VLJ7wYpWyCkbIGQsgVC
      yhYIKVsgpGyBkLIFQsoWCClbIKRsgZCyBULKFggpWyCkbIGQsgVCyhYIKVsgpGyBkLIFQsoW
      CClbIKRsgZCyBULKFggpWyD8/r9e5ac2sPzD9RzJr0BjbMWIJ1/gnligEUZQNzT+LbtgG4uX
      ZtD/6b8zI0qHu/w8hRU/lzXCCOqGxq+H8aztWzGMncLAKB0qQB3YgqYmb5k3gjrRG0Gt9kZQ
      l+5LxXZlJZcjqB+6eRHU/oofyy7mzMlo+vWuObWw5ghqMwU+e12OoE68qRHU/oofD+NWrGor
      5z/8GysOZ1JaoUIfE8/EGRPo1cQpI6ivg0YWQa0lbsQUxj1qRKdyUJi+lneXbSPu+TtkBPV1
      0IgiqCOJi3BgMxjRqQDUmDreRh97JlnICOq64MeyoW18NPs/2kymzQU4KEzfTmqTLnRARlDX
      Bb8exlVxiUy97TOWzHmCc1YVxlYDmfJkP6/QyGFMH7qchfNmku/S03b4bB6/ZgT1Gyza0JJn
      RjYX9qz8P0VjA8UnRRUOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total sales' width='138'>
      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
    </thumbnail>
    <thumbnail height='192' name='YoY growth rate profit' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='YoY growth rate sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit margin(%) drilled down by sub-categor' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='top 3 most profitable &quot;corporate&quot; customers' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 3 most profitable product sub categories in every region.' width='192'>
      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
      AQiymv8Pr/1nHuYNrRMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
